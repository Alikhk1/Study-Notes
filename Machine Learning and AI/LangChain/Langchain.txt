-LangChain: Open-source framework designed to simplify the development of applications powered by large language models (LLMs).
	1. LangSmith = Deploying Apps
	2. LangGrapgh = Deploying AI Agents

-Prompt Templates: Fundamental Langchain components, act as reusable recipes for defining prompts for LLMs.
	- Include instructions, examples and additional context.
	- from langchain_core.prompts import PromptTemplate
	- Chat roles: system, human, ai: define responses
		- from langchain_core.prompts import ChatPromptTemplate
	- Few shot prompting
		-  from langchain_core.prompts import PromptTemplate, FewShotPromptTemplate
	

-Langchain Expression Language (LCEL).
	- | : Chain Operator.
	- 
	

-Chains: Connect Calls to different components.
	- Types of Chains:
		1. Sequential Chains:
			- Problems which can be solved sequentially. (more than 1 user input)

-LangChain Agents: 
	- Use LLMs to determine Actions.
	- Use Tools which are functions called by the agent
		- Math, Wikipedia tools
	- ReAct agents: Reasoning and Acting 
		- Thought -> Act -> Observe
	- LangGraph: Branch of LangChain Eco-System specially for designing agent systems
		- pip install langgraph==0.2.74


- Custom Tools:
	- Tools must be formatted in a specific way to be compatible with agents
		- name
		- description: used by llm as context to determine when to use it.
		- return_direct: tells whether the agent should stop after invoking this tool. ('False' = don't stop)

	- from langchain_core.tools import tool
		- imports @tool decorate to decorate custom functions. Modifies functions to correct format.

- Retrieval Augmented Generation (RAG)
	- User query is embedded to retrieve the most relevant information from database, these documents are added to the prompt.
	- RAG Steps:
		1. Document Loading.
			- LangChain document loaders are classes designed to load & configure documents for systems integration.
		2. Splitting into chunks.
			- So that Documents fit the llm's context window.
			- Chunk Overlap: Counteract's lost information during chunk splitting.
			- Types:
				1. CharacterTextSplitter : splits based on seperator first, then evaluates chunk size & overlap.
							   So splits maybe longer than Chunk size.
	
				2. RecursiveCharacterTextSplitter.
		3. Storage + Retrieval.
			- Uses Vector DB

- LangChain Hub: Contains Catalog of prompts for range of tasks.
- LangChain Templates: Ready to use code blocks.
- LangSmith: TroubleShooting & evaluating applications.
- LangServer: Deploying applications.













	
